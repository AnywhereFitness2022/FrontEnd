{"ast":null,"code":"var _jsxFileName = \"/Users/gregball/Desktop/Classwork/FrontEnd/front-end/src/component/Orientation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Orientation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getItems = () => Array(20).fill(0).map((_, ind) => ({\n  id: `element-${ind}`\n}));\n\nconst Orientation = () => {\n  _s();\n\n  const [items, setItems] = useState(getItems);\n  const [selected, setSelected] = useState([]);\n  const [position, setPosition] = useState(0);\n\n  const isItemSelected = id => !!selected.find(el => el === id);\n\n  const handleClick = id => _ref => {\n    let {\n      getItemById,\n      scrollToItem\n    } = _ref;\n    const itemSelected = isItemSelected(id);\n    setSelected(currentSelected => itemSelected ? currentSelected.filter(el => el !== id) : currentSelected.concat(id));\n  }; // have to build out the actual slide data\n  // these are placeholder slides\n\n\n  const slides = [1, 2, 3, 4, 5];\n\n  const handleClickLeft = () => {\n    const slider = document.getElementById('slides');\n    slider.scrollLeft = slider.scrollLeft + 500;\n  };\n\n  const handleClickRight = () => {\n    const slider = document.getElementById('slides');\n    slider.scrollLeft = slider.scrollLeft - 500;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orientation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Welcome to Anytime Fitness!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-arrow\",\n      onClick: handleClick,\n      children: \" \\u2190 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slides\",\n      children: slides.map((slides, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slide-card\",\n          children: \" This is it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 37\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"forward-arrow\",\n      onClick: handleClickRight,\n      children: \" \\u2192  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Orientation, \"u6mGopx+xd/wMc6HuGp4GpbcX9A=\");\n\n_c = Orientation;\nexport default Orientation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orientation\");","map":{"version":3,"sources":["/Users/gregball/Desktop/Classwork/FrontEnd/front-end/src/component/Orientation.js"],"names":["React","useState","getItems","Array","fill","map","_","ind","id","Orientation","items","setItems","selected","setSelected","position","setPosition","isItemSelected","find","el","handleClick","getItemById","scrollToItem","itemSelected","currentSelected","filter","concat","slides","handleClickLeft","slider","document","getElementById","scrollLeft","handleClickRight","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,mBAAP;;;AAEA,MAAMC,QAAQ,GAAG,MACfC,KAAK,CAAC,EAAD,CAAL,CACGC,IADH,CACQ,CADR,EAEGC,GAFH,CAEO,CAACC,CAAD,EAAIC,GAAJ,MAAa;AAAEC,EAAAA,EAAE,EAAG,WAAUD,GAAI;AAArB,CAAb,CAFP,CADF;;AAKA,MAAME,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACC,QAAD,CAAlC;AACF,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,CAAD,CAAxC;;AAEA,QAAMe,cAAc,GAAIR,EAAD,IAAQ,CAAC,CAACI,QAAQ,CAACK,IAAT,CAAeC,EAAD,IAAQA,EAAE,KAAKV,EAA7B,CAAjC;;AAEA,QAAMW,WAAW,GACdX,EAAD,IACA,QAAmC;AAAA,QAAlC;AAAEY,MAAAA,WAAF;AAAeC,MAAAA;AAAf,KAAkC;AACjC,UAAMC,YAAY,GAAGN,cAAc,CAACR,EAAD,CAAnC;AAEAK,IAAAA,WAAW,CAAEU,eAAD,IACVD,YAAY,GACRC,eAAe,CAACC,MAAhB,CAAwBN,EAAD,IAAQA,EAAE,KAAKV,EAAtC,CADQ,GAERe,eAAe,CAACE,MAAhB,CAAuBjB,EAAvB,CAHK,CAAX;AAKD,GAVH,CARwB,CAqBtB;AACA;;;AACA,QAAMkB,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAf;;AAGA,QAAMC,eAAe,GAAG,MAAM;AAC1B,UAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AAEAF,IAAAA,MAAM,CAACG,UAAP,GAAoBH,MAAM,CAACG,UAAP,GAAoB,GAAxC;AACH,GAJD;;AAMA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,UAAMJ,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AAEAF,IAAAA,MAAM,CAACG,UAAP,GAAoBH,MAAM,CAACG,UAAP,GAAoB,GAAxC;AAEH,GALD;;AAOA,sBAEI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAEZ,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAIY;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAEQO,MAAM,CAACrB,GAAP,CAAW,CAACqB,MAAD,EAASO,CAAT,KAAe;AACtB,4BACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAIH,OALD;AAFR;AAAA;AAAA;AAAA;AAAA,YAJZ,eAcY;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAED,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdZ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAoBH,CA3DD;;GAAMvB,W;;KAAAA,W;AA6DN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport './Orientation.css';\n\nconst getItems = () =>\n  Array(20)\n    .fill(0)\n    .map((_, ind) => ({ id: `element-${ind}` }));\n\nconst Orientation = () => {\n\n    const [items, setItems] = useState(getItems);\n  const [selected, setSelected] = useState([]);\n  const [position, setPosition] = useState(0);\n\n  const isItemSelected = (id) => !!selected.find((el) => el === id);\n\n  const handleClick =\n    (id) =>\n    ({ getItemById, scrollToItem }) => {\n      const itemSelected = isItemSelected(id);\n\n      setSelected((currentSelected) =>\n        itemSelected\n          ? currentSelected.filter((el) => el !== id)\n          : currentSelected.concat(id)\n      );\n    };\n\n\n    // have to build out the actual slide data\n    // these are placeholder slides\n    const slides = [1, 2, 3, 4, 5];\n\n\n    const handleClickLeft = () => {\n        const slider = document.getElementById('slides');\n\n        slider.scrollLeft = slider.scrollLeft + 500;\n    }\n\n    const handleClickRight = () => {\n        const slider = document.getElementById('slides');\n\n        slider.scrollLeft = slider.scrollLeft - 500;\n\n    }\n\n    return(\n\n        <div className='orientation-container'>\n            <div className='title'>Welcome to Anytime Fitness!</div>\n            <button className='back-arrow' onClick={handleClick}> ← </button> \n\n                    <div className='slides'>\n                        {\n                            slides.map((slides, i) => {\n                                return(\n                                    <div className='slide-card'> This is it\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                    <button className='forward-arrow' onClick={handleClickRight}> →  </button>\n        </div>\n\n    )\n}\n\nexport default Orientation;"]},"metadata":{},"sourceType":"module"}